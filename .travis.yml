# example travis.yml haxe configuration
language: c # change this to objective-c to test on a mac machine

env:
  matrix:
    # basic tests
    - TARGET=interp
    # haxe releases
    # - TARGET=interp HAXE_VER=3.2.0
    - TARGET=interp HAXE_VER=3.1.3
    - TARGET=interp HAXE_VER=v3.1.0
    # haxe targets
    - TARGET=neko
    - TARGET=js TOOLCHAIN=default
    - TARGET=java
    - TARGET=cs
    - TARGET=cpp
    - TARGET=cpp ARCH=i686
    - TARGET=python
    - TARGET=php
    - TARGET=swf

matrix:
  fast_finish: true
  allow_failures:
    # - env: TARGET=interp HAXE_VER=3.1.3
    # - env: TARGET=interp HAXE_VER=v3.1.0
    - env: TARGET=cpp ARCH=i686

before_install: # clone travis-hx repo
  - travis_retry git clone --depth=50 --branch=master git://github.com/jonasmalacofilho/travis-hx.git ~/travis-hx

install: # setup the target
  - ~/travis-hx/setup.sh
  - haxelib install utest

script:
  - cd $TRAVIS_BUILD_DIR
  # default production builds
  - HXFLAGS="-main TestAll -cp test -cp lib -lib utest -D travis" ~/travis-hx/build.sh
  - ~/travis-hx/runtests.sh $FILENAME # this will set the $FILENAME defined on the environment variable to run the tests
  # --no-inline
  - HXFLAGS="-main TestAll -cp test -cp lib -lib utest -D travis --no-inline" ~/travis-hx/build.sh
  - ~/travis-hx/runtests.sh $FILENAME # this will set the $FILENAME defined on the environment variable to run the tests

